#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost:8083/ws/RHABSENCES.apw?WSDL
Gerado em        07/14/16 13:52:30
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _JQPFSLI ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHABSENCES
------------------------------------------------------------------------------- */

WSCLIENT WSRHABSENCES

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BROWSEABSENCES
	WSMETHOD GETABSENCE

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cBRANCH                   AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   oWSBROWSEABSENCESRESULT   AS RHABSENCES_TABSENCEBROWSERDATA
	WSDATA   cSEQUENCE                 AS string
	WSDATA   oWSGETABSENCERESULT       AS RHABSENCES_TABSENCEGETDATA

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHABSENCES
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.131227A-20160405 NG] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHABSENCES
	::oWSBROWSEABSENCESRESULT := RHABSENCES_TABSENCEBROWSERDATA():New()
	::oWSGETABSENCERESULT := RHABSENCES_TABSENCEGETDATA():New()
Return

WSMETHOD RESET WSCLIENT WSRHABSENCES
	::cBRANCH            := NIL 
	::cREGISTRATION      := NIL 
	::oWSBROWSEABSENCESRESULT := NIL 
	::cSEQUENCE          := NIL 
	::oWSGETABSENCERESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHABSENCES
Local oClone := WSRHABSENCES():New()
	oClone:_URL          := ::_URL 
	oClone:cBRANCH       := ::cBRANCH
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:oWSBROWSEABSENCESRESULT :=  IIF(::oWSBROWSEABSENCESRESULT = NIL , NIL ,::oWSBROWSEABSENCESRESULT:Clone() )
	oClone:cSEQUENCE     := ::cSEQUENCE
	oClone:oWSGETABSENCERESULT :=  IIF(::oWSGETABSENCERESULT = NIL , NIL ,::oWSGETABSENCERESULT:Clone() )
Return oClone

// WSDL Method BROWSEABSENCES of Service WSRHABSENCES

WSMETHOD BROWSEABSENCES WSSEND cBRANCH,cREGISTRATION WSRECEIVE oWSBROWSEABSENCESRESULT WSCLIENT WSRHABSENCES
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BROWSEABSENCES xmlns="http://localhost:8083/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</BROWSEABSENCES>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8083/BROWSEABSENCES",; 
	"DOCUMENT","http://localhost:8083/",,"1.031217",; 
	"http://localhost:8083/ws/RHABSENCES.apw")

::Init()
::oWSBROWSEABSENCESRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BROWSEABSENCESRESPONSE:_BROWSEABSENCESRESULT","TABSENCEBROWSERDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETABSENCE of Service WSRHABSENCES

WSMETHOD GETABSENCE WSSEND cBRANCH,cREGISTRATION,cSEQUENCE WSRECEIVE oWSGETABSENCERESULT WSCLIENT WSRHABSENCES
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETABSENCE xmlns="http://localhost:8083/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("SEQUENCE", ::cSEQUENCE, cSEQUENCE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETABSENCE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8083/GETABSENCE",; 
	"DOCUMENT","http://localhost:8083/",,"1.031217",; 
	"http://localhost:8083/ws/RHABSENCES.apw")

::Init()
::oWSGETABSENCERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETABSENCERESPONSE:_GETABSENCERESULT","TABSENCEGETDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure TABSENCEBROWSERDATA

WSSTRUCT RHABSENCES_TABSENCEBROWSERDATA
	WSDATA   oWSABSENCES               AS RHABSENCES_ARRAYOFTABSENCE
	WSDATA   oWSLOCALEFIELDS           AS RHABSENCES_ARRAYOFTLOCALEFIELDS
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_TABSENCEBROWSERDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_TABSENCEBROWSERDATA
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_TABSENCEBROWSERDATA
	Local oClone := RHABSENCES_TABSENCEBROWSERDATA():NEW()
	oClone:oWSABSENCES          := IIF(::oWSABSENCES = NIL , NIL , ::oWSABSENCES:Clone() )
	oClone:oWSLOCALEFIELDS      := IIF(::oWSLOCALEFIELDS = NIL , NIL , ::oWSLOCALEFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_TABSENCEBROWSERDATA
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ABSENCES","ARRAYOFTABSENCE",NIL,"Property oWSABSENCES as s0:ARRAYOFTABSENCE on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSABSENCES := RHABSENCES_ARRAYOFTABSENCE():New()
		::oWSABSENCES:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_LOCALEFIELDS","ARRAYOFTLOCALEFIELDS",NIL,"Property oWSLOCALEFIELDS as s0:ARRAYOFTLOCALEFIELDS on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSLOCALEFIELDS := RHABSENCES_ARRAYOFTLOCALEFIELDS():New()
		::oWSLOCALEFIELDS:SoapRecv(oNode2)
	EndIf
Return

// WSDL Data Structure TABSENCEGETDATA

WSSTRUCT RHABSENCES_TABSENCEGETDATA
	WSDATA   oWSABSENCE                AS RHABSENCES_TABSENCE
	WSDATA   oWSLOCALEFIELDS           AS RHABSENCES_ARRAYOFTLOCALEFIELDS
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_TABSENCEGETDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_TABSENCEGETDATA
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_TABSENCEGETDATA
	Local oClone := RHABSENCES_TABSENCEGETDATA():NEW()
	oClone:oWSABSENCE           := IIF(::oWSABSENCE = NIL , NIL , ::oWSABSENCE:Clone() )
	oClone:oWSLOCALEFIELDS      := IIF(::oWSLOCALEFIELDS = NIL , NIL , ::oWSLOCALEFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_TABSENCEGETDATA
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ABSENCE","TABSENCE",NIL,"Property oWSABSENCE as s0:TABSENCE on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSABSENCE := RHABSENCES_TABSENCE():New()
		::oWSABSENCE:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_LOCALEFIELDS","ARRAYOFTLOCALEFIELDS",NIL,"Property oWSLOCALEFIELDS as s0:ARRAYOFTLOCALEFIELDS on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSLOCALEFIELDS := RHABSENCES_ARRAYOFTLOCALEFIELDS():New()
		::oWSLOCALEFIELDS:SoapRecv(oNode2)
	EndIf
Return

// WSDL Data Structure ARRAYOFTABSENCE

WSSTRUCT RHABSENCES_ARRAYOFTABSENCE
	WSDATA   oWSTABSENCE               AS RHABSENCES_TABSENCE OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_ARRAYOFTABSENCE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_ARRAYOFTABSENCE
	::oWSTABSENCE          := {} // Array Of  RHABSENCES_TABSENCE():New()
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_ARRAYOFTABSENCE
	Local oClone := RHABSENCES_ARRAYOFTABSENCE():NEW()
	oClone:oWSTABSENCE := NIL
	If ::oWSTABSENCE <> NIL 
		oClone:oWSTABSENCE := {}
		aEval( ::oWSTABSENCE , { |x| aadd( oClone:oWSTABSENCE , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_ARRAYOFTABSENCE
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TABSENCE","TABSENCE",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTABSENCE , RHABSENCES_TABSENCE():New() )
			::oWSTABSENCE[len(::oWSTABSENCE)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTLOCALEFIELDS

WSSTRUCT RHABSENCES_ARRAYOFTLOCALEFIELDS
	WSDATA   oWSTLOCALEFIELDS          AS RHABSENCES_TLOCALEFIELDS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_ARRAYOFTLOCALEFIELDS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_ARRAYOFTLOCALEFIELDS
	::oWSTLOCALEFIELDS     := {} // Array Of  RHABSENCES_TLOCALEFIELDS():New()
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_ARRAYOFTLOCALEFIELDS
	Local oClone := RHABSENCES_ARRAYOFTLOCALEFIELDS():NEW()
	oClone:oWSTLOCALEFIELDS := NIL
	If ::oWSTLOCALEFIELDS <> NIL 
		oClone:oWSTLOCALEFIELDS := {}
		aEval( ::oWSTLOCALEFIELDS , { |x| aadd( oClone:oWSTLOCALEFIELDS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_ARRAYOFTLOCALEFIELDS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TLOCALEFIELDS","TLOCALEFIELDS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTLOCALEFIELDS , RHABSENCES_TLOCALEFIELDS():New() )
			::oWSTLOCALEFIELDS[len(::oWSTLOCALEFIELDS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TABSENCE

WSSTRUCT RHABSENCES_TABSENCE
	WSDATA   cBRANCH                   AS string
	WSDATA   nDAYNUMBER                AS integer
	WSDATA   dENDDATE                  AS date
	WSDATA   oWSLOCALEVALUES           AS RHABSENCES_ARRAYOFSTRING
	WSDATA   cREGISTRATION             AS string
	WSDATA   cSEQUENCE                 AS string
	WSDATA   dSTARTDATE                AS date
	WSDATA   cTYPE                     AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_TABSENCE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_TABSENCE
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_TABSENCE
	Local oClone := RHABSENCES_TABSENCE():NEW()
	oClone:cBRANCH              := ::cBRANCH
	oClone:nDAYNUMBER           := ::nDAYNUMBER
	oClone:dENDDATE             := ::dENDDATE
	oClone:oWSLOCALEVALUES      := IIF(::oWSLOCALEVALUES = NIL , NIL , ::oWSLOCALEVALUES:Clone() )
	oClone:cREGISTRATION        := ::cREGISTRATION
	oClone:cSEQUENCE            := ::cSEQUENCE
	oClone:dSTARTDATE           := ::dSTARTDATE
	oClone:cTYPE                := ::cTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_TABSENCE
	Local oNode4
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,"Property cBRANCH as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nDAYNUMBER         :=  WSAdvValue( oResponse,"_DAYNUMBER","integer",NIL,"Property nDAYNUMBER as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::dENDDATE           :=  WSAdvValue( oResponse,"_ENDDATE","date",NIL,"Property dENDDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	oNode4 :=  WSAdvValue( oResponse,"_LOCALEVALUES","ARRAYOFSTRING",NIL,"Property oWSLOCALEVALUES as s0:ARRAYOFSTRING on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode4 != NIL
		::oWSLOCALEVALUES := RHABSENCES_ARRAYOFSTRING():New()
		::oWSLOCALEVALUES:SoapRecv(oNode4)
	EndIf
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,"Property cREGISTRATION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSEQUENCE          :=  WSAdvValue( oResponse,"_SEQUENCE","string",NIL,"Property cSEQUENCE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dSTARTDATE         :=  WSAdvValue( oResponse,"_STARTDATE","date",NIL,"Property dSTARTDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,"Property cTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure TLOCALEFIELDS

WSSTRUCT RHABSENCES_TLOCALEFIELDS
	WSDATA   cCOMBOBOX                 AS string
	WSDATA   nDECIMALS                 AS integer
	WSDATA   cFIELDNAME                AS string
	WSDATA   nLENGTH                   AS integer
	WSDATA   cTITLE                    AS string
	WSDATA   cTYPE                     AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_TLOCALEFIELDS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_TLOCALEFIELDS
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_TLOCALEFIELDS
	Local oClone := RHABSENCES_TLOCALEFIELDS():NEW()
	oClone:cCOMBOBOX            := ::cCOMBOBOX
	oClone:nDECIMALS            := ::nDECIMALS
	oClone:cFIELDNAME           := ::cFIELDNAME
	oClone:nLENGTH              := ::nLENGTH
	oClone:cTITLE               := ::cTITLE
	oClone:cTYPE                := ::cTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_TLOCALEFIELDS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOMBOBOX          :=  WSAdvValue( oResponse,"_COMBOBOX","string",NIL,"Property cCOMBOBOX as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nDECIMALS          :=  WSAdvValue( oResponse,"_DECIMALS","integer",NIL,"Property nDECIMALS as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cFIELDNAME         :=  WSAdvValue( oResponse,"_FIELDNAME","string",NIL,"Property cFIELDNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nLENGTH            :=  WSAdvValue( oResponse,"_LENGTH","integer",NIL,"Property nLENGTH as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cTITLE             :=  WSAdvValue( oResponse,"_TITLE","string",NIL,"Property cTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,"Property cTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSTRING

WSSTRUCT RHABSENCES_ARRAYOFSTRING
	WSDATA   cSTRING                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABSENCES_ARRAYOFSTRING
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABSENCES_ARRAYOFSTRING
	::cSTRING              := {} // Array Of  ""
Return

WSMETHOD CLONE WSCLIENT RHABSENCES_ARRAYOFSTRING
	Local oClone := RHABSENCES_ARRAYOFSTRING():NEW()
	oClone:cSTRING              := IIf(::cSTRING <> NIL , aClone(::cSTRING) , NIL )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABSENCES_ARRAYOFSTRING
	Local oNodes1 :=  WSAdvValue( oResponse,"_STRING","string",{},NIL,.T.,"S",NIL,"a") 
	::Init()
	If oResponse = NIL ; Return ; Endif 
	aEval(oNodes1 , { |x| aadd(::cSTRING ,  x:TEXT  ) } )
Return


