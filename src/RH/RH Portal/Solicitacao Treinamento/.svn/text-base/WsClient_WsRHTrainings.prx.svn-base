#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost:8888/ws/RHTRAININGS.apw?WSDL
Gerado em        04/12/16 10:59:35
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _OKZXJRR ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHTRAININGS
------------------------------------------------------------------------------- */

WSCLIENT WSRHTRAININGS

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BROWSETRAININGS
	WSMETHOD GETDEPARTMAPTRAININGS
	WSMETHOD GETDISCIPLINE
	WSMETHOD GETMAPTRAININGS
	WSMETHOD GETOUTHERTRAINING
	WSMETHOD GETTRAINING
	WSMETHOD OTHERTRAININGS

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cBRANCH                   AS string
	WSDATA   nPAGE                     AS integer
	WSDATA   cFILTERFIELD              AS string
	WSDATA   cFILTERVALUE              AS string
	WSDATA   cFILTERCATEG              AS string
	WSDATA   cFILTERTYPE               AS string
	WSDATA   oWSBROWSETRAININGSRESULT  AS RHTRAININGS_TTRAININGDATA
	WSDATA   oWSEMPLOYEESDATA          AS RHTRAININGS_TEMPLOYEESDATA
	WSDATA   oWSGETDEPARTMAPTRAININGSRESULT AS RHTRAININGS_ARRAYOFDATAPOSITION
	WSDATA   cCOURSECODE               AS string
	WSDATA   oWSGETDISCIPLINERESULT    AS RHTRAININGS_TDISCIPLINEDATA
	WSDATA   cREGISTRATION             AS string
	WSDATA   cPOSITIONID               AS string
	WSDATA   oWSGETMAPTRAININGSRESULT  AS RHTRAININGS_TDATACOURSESBROWSE
	WSDATA   oWSGETOUTHERTRAININGRESULT AS RHTRAININGS_DATATRAININGS
	WSDATA   cCALENDARCODE             AS string
	WSDATA   cCOURSECLASS              AS string
	WSDATA   oWSGETTRAININGRESULT      AS RHTRAININGS_DATATRAININGS
	WSDATA   oWSOTHERTRAININGSRESULT   AS RHTRAININGS_TTRAININGDATA

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSTEMPLOYEESDATA         AS RHTRAININGS_TEMPLOYEESDATA

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHTRAININGS
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.131227A-20160114 NG] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHTRAININGS
	::oWSBROWSETRAININGSRESULT := RHTRAININGS_TTRAININGDATA():New()
	::oWSEMPLOYEESDATA   := RHTRAININGS_TEMPLOYEESDATA():New()
	::oWSGETDEPARTMAPTRAININGSRESULT := RHTRAININGS_ARRAYOFDATAPOSITION():New()
	::oWSGETDISCIPLINERESULT := RHTRAININGS_TDISCIPLINEDATA():New()
	::oWSGETMAPTRAININGSRESULT := RHTRAININGS_TDATACOURSESBROWSE():New()
	::oWSGETOUTHERTRAININGRESULT := RHTRAININGS_DATATRAININGS():New()
	::oWSGETTRAININGRESULT := RHTRAININGS_DATATRAININGS():New()
	::oWSOTHERTRAININGSRESULT := RHTRAININGS_TTRAININGDATA():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSTEMPLOYEESDATA  := ::oWSEMPLOYEESDATA
Return

WSMETHOD RESET WSCLIENT WSRHTRAININGS
	::cBRANCH            := NIL 
	::nPAGE              := NIL 
	::cFILTERFIELD       := NIL 
	::cFILTERVALUE       := NIL 
	::cFILTERCATEG       := NIL 
	::cFILTERTYPE        := NIL 
	::oWSBROWSETRAININGSRESULT := NIL 
	::oWSEMPLOYEESDATA   := NIL 
	::oWSGETDEPARTMAPTRAININGSRESULT := NIL 
	::cCOURSECODE        := NIL 
	::oWSGETDISCIPLINERESULT := NIL 
	::cREGISTRATION      := NIL 
	::cPOSITIONID        := NIL 
	::oWSGETMAPTRAININGSRESULT := NIL 
	::oWSGETOUTHERTRAININGRESULT := NIL 
	::cCALENDARCODE      := NIL 
	::cCOURSECLASS       := NIL 
	::oWSGETTRAININGRESULT := NIL 
	::oWSOTHERTRAININGSRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSTEMPLOYEESDATA  := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHTRAININGS
Local oClone := WSRHTRAININGS():New()
	oClone:_URL          := ::_URL 
	oClone:cBRANCH       := ::cBRANCH
	oClone:nPAGE         := ::nPAGE
	oClone:cFILTERFIELD  := ::cFILTERFIELD
	oClone:cFILTERVALUE  := ::cFILTERVALUE
	oClone:cFILTERCATEG  := ::cFILTERCATEG
	oClone:cFILTERTYPE   := ::cFILTERTYPE
	oClone:oWSBROWSETRAININGSRESULT :=  IIF(::oWSBROWSETRAININGSRESULT = NIL , NIL ,::oWSBROWSETRAININGSRESULT:Clone() )
	oClone:oWSEMPLOYEESDATA :=  IIF(::oWSEMPLOYEESDATA = NIL , NIL ,::oWSEMPLOYEESDATA:Clone() )
	oClone:oWSGETDEPARTMAPTRAININGSRESULT :=  IIF(::oWSGETDEPARTMAPTRAININGSRESULT = NIL , NIL ,::oWSGETDEPARTMAPTRAININGSRESULT:Clone() )
	oClone:cCOURSECODE   := ::cCOURSECODE
	oClone:oWSGETDISCIPLINERESULT :=  IIF(::oWSGETDISCIPLINERESULT = NIL , NIL ,::oWSGETDISCIPLINERESULT:Clone() )
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:cPOSITIONID   := ::cPOSITIONID
	oClone:oWSGETMAPTRAININGSRESULT :=  IIF(::oWSGETMAPTRAININGSRESULT = NIL , NIL ,::oWSGETMAPTRAININGSRESULT:Clone() )
	oClone:oWSGETOUTHERTRAININGRESULT :=  IIF(::oWSGETOUTHERTRAININGRESULT = NIL , NIL ,::oWSGETOUTHERTRAININGRESULT:Clone() )
	oClone:cCALENDARCODE := ::cCALENDARCODE
	oClone:cCOURSECLASS  := ::cCOURSECLASS
	oClone:oWSGETTRAININGRESULT :=  IIF(::oWSGETTRAININGRESULT = NIL , NIL ,::oWSGETTRAININGRESULT:Clone() )
	oClone:oWSOTHERTRAININGSRESULT :=  IIF(::oWSOTHERTRAININGSRESULT = NIL , NIL ,::oWSOTHERTRAININGSRESULT:Clone() )

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSTEMPLOYEESDATA := oClone:oWSEMPLOYEESDATA
Return oClone

// WSDL Method BROWSETRAININGS of Service WSRHTRAININGS

WSMETHOD BROWSETRAININGS WSSEND cBRANCH,nPAGE,cFILTERFIELD,cFILTERVALUE,cFILTERCATEG,cFILTERTYPE WSRECEIVE oWSBROWSETRAININGSRESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BROWSETRAININGS xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PAGE", ::nPAGE, nPAGE , "integer", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERFIELD", ::cFILTERFIELD, cFILTERFIELD , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERVALUE", ::cFILTERVALUE, cFILTERVALUE , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERCATEG", ::cFILTERCATEG, cFILTERCATEG , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERTYPE", ::cFILTERTYPE, cFILTERTYPE , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BROWSETRAININGS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/BROWSETRAININGS",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSBROWSETRAININGSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BROWSETRAININGSRESPONSE:_BROWSETRAININGSRESULT","TTRAININGDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETDEPARTMAPTRAININGS of Service WSRHTRAININGS

WSMETHOD GETDEPARTMAPTRAININGS WSSEND oWSEMPLOYEESDATA WSRECEIVE oWSGETDEPARTMAPTRAININGSRESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETDEPARTMAPTRAININGS xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("EMPLOYEESDATA", ::oWSEMPLOYEESDATA, oWSEMPLOYEESDATA , "TEMPLOYEESDATA", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETDEPARTMAPTRAININGS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/GETDEPARTMAPTRAININGS",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSGETDEPARTMAPTRAININGSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETDEPARTMAPTRAININGSRESPONSE:_GETDEPARTMAPTRAININGSRESULT","ARRAYOFDATAPOSITION",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETDISCIPLINE of Service WSRHTRAININGS

WSMETHOD GETDISCIPLINE WSSEND cBRANCH,cCOURSECODE WSRECEIVE oWSGETDISCIPLINERESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETDISCIPLINE xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSECODE", ::cCOURSECODE, cCOURSECODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETDISCIPLINE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/GETDISCIPLINE",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSGETDISCIPLINERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETDISCIPLINERESPONSE:_GETDISCIPLINERESULT","TDISCIPLINEDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETMAPTRAININGS of Service WSRHTRAININGS

WSMETHOD GETMAPTRAININGS WSSEND cBRANCH,cREGISTRATION,cPOSITIONID WSRECEIVE oWSGETMAPTRAININGSRESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETMAPTRAININGS xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("POSITIONID", ::cPOSITIONID, cPOSITIONID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</GETMAPTRAININGS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/GETMAPTRAININGS",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSGETMAPTRAININGSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETMAPTRAININGSRESPONSE:_GETMAPTRAININGSRESULT","TDATACOURSESBROWSE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETOUTHERTRAINING of Service WSRHTRAININGS

WSMETHOD GETOUTHERTRAINING WSSEND cBRANCH,cREGISTRATION,cCOURSECODE WSRECEIVE oWSGETOUTHERTRAININGRESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETOUTHERTRAINING xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSECODE", ::cCOURSECODE, cCOURSECODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETOUTHERTRAINING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/GETOUTHERTRAINING",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSGETOUTHERTRAININGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETOUTHERTRAININGRESPONSE:_GETOUTHERTRAININGRESULT","DATATRAININGS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTRAINING of Service WSRHTRAININGS

WSMETHOD GETTRAINING WSSEND cBRANCH,cREGISTRATION,cCALENDARCODE,cCOURSECODE,cCOURSECLASS WSRECEIVE oWSGETTRAININGRESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTRAINING xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("CALENDARCODE", ::cCALENDARCODE, cCALENDARCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSECODE", ::cCOURSECODE, cCOURSECODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSECLASS", ::cCOURSECLASS, cCOURSECLASS , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETTRAINING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/GETTRAINING",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSGETTRAININGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTRAININGRESPONSE:_GETTRAININGRESULT","DATATRAININGS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method OTHERTRAININGS of Service WSRHTRAININGS

WSMETHOD OTHERTRAININGS WSSEND cBRANCH,nPAGE,cREGISTRATION,cFILTERFIELD,cFILTERVALUE,cFILTERCATEG,cFILTERTYPE WSRECEIVE oWSOTHERTRAININGSRESULT WSCLIENT WSRHTRAININGS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<OTHERTRAININGS xmlns="http://localhost:8888/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PAGE", ::nPAGE, nPAGE , "integer", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERFIELD", ::cFILTERFIELD, cFILTERFIELD , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERVALUE", ::cFILTERVALUE, cFILTERVALUE , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERCATEG", ::cFILTERCATEG, cFILTERCATEG , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERTYPE", ::cFILTERTYPE, cFILTERTYPE , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</OTHERTRAININGS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:8888/OTHERTRAININGS",; 
	"DOCUMENT","http://localhost:8888/",,"1.031217",; 
	"http://localhost:8888/ws/RHTRAININGS.apw")

::Init()
::oWSOTHERTRAININGSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_OTHERTRAININGSRESPONSE:_OTHERTRAININGSRESULT","TTRAININGDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure TTRAININGDATA

WSSTRUCT RHTRAININGS_TTRAININGDATA
	WSDATA   oWSLISTOFCATEGS           AS RHTRAININGS_ARRAYOFDATACATEGS OPTIONAL
	WSDATA   oWSLISTOFTRAININGS        AS RHTRAININGS_ARRAYOFDATATRAININGS OPTIONAL
	WSDATA   nPAGESTOTAL               AS integer OPTIONAL
	WSDATA   lPARAMETERMVINTTREI       AS boolean OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_TTRAININGDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_TTRAININGDATA
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_TTRAININGDATA
	Local oClone := RHTRAININGS_TTRAININGDATA():NEW()
	oClone:oWSLISTOFCATEGS      := IIF(::oWSLISTOFCATEGS = NIL , NIL , ::oWSLISTOFCATEGS:Clone() )
	oClone:oWSLISTOFTRAININGS   := IIF(::oWSLISTOFTRAININGS = NIL , NIL , ::oWSLISTOFTRAININGS:Clone() )
	oClone:nPAGESTOTAL          := ::nPAGESTOTAL
	oClone:lPARAMETERMVINTTREI  := ::lPARAMETERMVINTTREI
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_TTRAININGDATA
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_LISTOFCATEGS","ARRAYOFDATACATEGS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSLISTOFCATEGS := RHTRAININGS_ARRAYOFDATACATEGS():New()
		::oWSLISTOFCATEGS:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_LISTOFTRAININGS","ARRAYOFDATATRAININGS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSLISTOFTRAININGS := RHTRAININGS_ARRAYOFDATATRAININGS():New()
		::oWSLISTOFTRAININGS:SoapRecv(oNode2)
	EndIf
	::nPAGESTOTAL        :=  WSAdvValue( oResponse,"_PAGESTOTAL","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::lPARAMETERMVINTTREI :=  WSAdvValue( oResponse,"_PARAMETERMVINTTREI","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
Return

// WSDL Data Structure TEMPLOYEESDATA

WSSTRUCT RHTRAININGS_TEMPLOYEESDATA
	WSDATA   oWSLISTOFEMPLOYEE         AS RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_TEMPLOYEESDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_TEMPLOYEESDATA
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_TEMPLOYEESDATA
	Local oClone := RHTRAININGS_TEMPLOYEESDATA():NEW()
	oClone:oWSLISTOFEMPLOYEE    := IIF(::oWSLISTOFEMPLOYEE = NIL , NIL , ::oWSLISTOFEMPLOYEE:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHTRAININGS_TEMPLOYEESDATA
	Local cSoap := ""
	cSoap += WSSoapValue("LISTOFEMPLOYEE", ::oWSLISTOFEMPLOYEE, ::oWSLISTOFEMPLOYEE , "ARRAYOFDATACOURSESEMPLOYEE", .F. , .F., 0 , NIL, .F.) 
Return cSoap

// WSDL Data Structure ARRAYOFDATAPOSITION

WSSTRUCT RHTRAININGS_ARRAYOFDATAPOSITION
	WSDATA   oWSDATAPOSITION           AS RHTRAININGS_DATAPOSITION OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_ARRAYOFDATAPOSITION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_ARRAYOFDATAPOSITION
	::oWSDATAPOSITION      := {} // Array Of  RHTRAININGS_DATAPOSITION():New()
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_ARRAYOFDATAPOSITION
	Local oClone := RHTRAININGS_ARRAYOFDATAPOSITION():NEW()
	oClone:oWSDATAPOSITION := NIL
	If ::oWSDATAPOSITION <> NIL 
		oClone:oWSDATAPOSITION := {}
		aEval( ::oWSDATAPOSITION , { |x| aadd( oClone:oWSDATAPOSITION , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_ARRAYOFDATAPOSITION
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DATAPOSITION","DATAPOSITION",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDATAPOSITION , RHTRAININGS_DATAPOSITION():New() )
			::oWSDATAPOSITION[len(::oWSDATAPOSITION)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TDISCIPLINEDATA

WSSTRUCT RHTRAININGS_TDISCIPLINEDATA
	WSDATA   oWSLISTOFDISCIPLINES      AS RHTRAININGS_ARRAYOFDATADISCIPLINES OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_TDISCIPLINEDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_TDISCIPLINEDATA
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_TDISCIPLINEDATA
	Local oClone := RHTRAININGS_TDISCIPLINEDATA():NEW()
	oClone:oWSLISTOFDISCIPLINES := IIF(::oWSLISTOFDISCIPLINES = NIL , NIL , ::oWSLISTOFDISCIPLINES:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_TDISCIPLINEDATA
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_LISTOFDISCIPLINES","ARRAYOFDATADISCIPLINES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSLISTOFDISCIPLINES := RHTRAININGS_ARRAYOFDATADISCIPLINES():New()
		::oWSLISTOFDISCIPLINES:SoapRecv(oNode1)
	EndIf
Return

// WSDL Data Structure TDATACOURSESBROWSE

WSSTRUCT RHTRAININGS_TDATACOURSESBROWSE
	WSDATA   oWSITENS                  AS RHTRAININGS_ARRAYOFDATACOURSES OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_TDATACOURSESBROWSE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_TDATACOURSESBROWSE
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_TDATACOURSESBROWSE
	Local oClone := RHTRAININGS_TDATACOURSESBROWSE():NEW()
	oClone:oWSITENS             := IIF(::oWSITENS = NIL , NIL , ::oWSITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_TDATACOURSESBROWSE
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ITENS","ARRAYOFDATACOURSES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSITENS := RHTRAININGS_ARRAYOFDATACOURSES():New()
		::oWSITENS:SoapRecv(oNode1)
	EndIf
Return

// WSDL Data Structure DATATRAININGS

WSSTRUCT RHTRAININGS_DATATRAININGS
	WSDATA   cBRANCH                   AS string
	WSDATA   cCALENDARCODE             AS string
	WSDATA   cCALENDARDESCRIPTION      AS string
	WSDATA   cCODEINSTRUCTOR           AS string OPTIONAL
	WSDATA   cCOURSECLASS              AS string
	WSDATA   cCOURSECODE               AS string
	WSDATA   cCOURSEDESCRIPTION        AS string
	WSDATA   cDESCINSTRUCTOR           AS string OPTIONAL
	WSDATA   cDURATION                 AS string
	WSDATA   dENDINGDATE               AS date
	WSDATA   lHASREQUEST               AS boolean OPTIONAL
	WSDATA   dINITIALDATE              AS date
	WSDATA   cMINIMUMQUANTITY          AS string OPTIONAL
	WSDATA   nQUANTITYINTERESTED       AS integer OPTIONAL
	WSDATA   cREQUESTED                AS string OPTIONAL
	WSDATA   nRESERVEDPLACES           AS integer
	WSDATA   cRESERVETYPE              AS string OPTIONAL
	WSDATA   cTIME                     AS string
	WSDATA   nTOTALPLACES              AS integer
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_DATATRAININGS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_DATATRAININGS
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_DATATRAININGS
	Local oClone := RHTRAININGS_DATATRAININGS():NEW()
	oClone:cBRANCH              := ::cBRANCH
	oClone:cCALENDARCODE        := ::cCALENDARCODE
	oClone:cCALENDARDESCRIPTION := ::cCALENDARDESCRIPTION
	oClone:cCODEINSTRUCTOR      := ::cCODEINSTRUCTOR
	oClone:cCOURSECLASS         := ::cCOURSECLASS
	oClone:cCOURSECODE          := ::cCOURSECODE
	oClone:cCOURSEDESCRIPTION   := ::cCOURSEDESCRIPTION
	oClone:cDESCINSTRUCTOR      := ::cDESCINSTRUCTOR
	oClone:cDURATION            := ::cDURATION
	oClone:dENDINGDATE          := ::dENDINGDATE
	oClone:lHASREQUEST          := ::lHASREQUEST
	oClone:dINITIALDATE         := ::dINITIALDATE
	oClone:cMINIMUMQUANTITY     := ::cMINIMUMQUANTITY
	oClone:nQUANTITYINTERESTED  := ::nQUANTITYINTERESTED
	oClone:cREQUESTED           := ::cREQUESTED
	oClone:nRESERVEDPLACES      := ::nRESERVEDPLACES
	oClone:cRESERVETYPE         := ::cRESERVETYPE
	oClone:cTIME                := ::cTIME
	oClone:nTOTALPLACES         := ::nTOTALPLACES
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_DATATRAININGS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,"Property cBRANCH as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCALENDARCODE      :=  WSAdvValue( oResponse,"_CALENDARCODE","string",NIL,"Property cCALENDARCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCALENDARDESCRIPTION :=  WSAdvValue( oResponse,"_CALENDARDESCRIPTION","string",NIL,"Property cCALENDARDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCODEINSTRUCTOR    :=  WSAdvValue( oResponse,"_CODEINSTRUCTOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSECLASS       :=  WSAdvValue( oResponse,"_COURSECLASS","string",NIL,"Property cCOURSECLASS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOURSECODE        :=  WSAdvValue( oResponse,"_COURSECODE","string",NIL,"Property cCOURSECODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOURSEDESCRIPTION :=  WSAdvValue( oResponse,"_COURSEDESCRIPTION","string",NIL,"Property cCOURSEDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCINSTRUCTOR    :=  WSAdvValue( oResponse,"_DESCINSTRUCTOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDURATION          :=  WSAdvValue( oResponse,"_DURATION","string",NIL,"Property cDURATION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dENDINGDATE        :=  WSAdvValue( oResponse,"_ENDINGDATE","date",NIL,"Property dENDINGDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::lHASREQUEST        :=  WSAdvValue( oResponse,"_HASREQUEST","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::dINITIALDATE       :=  WSAdvValue( oResponse,"_INITIALDATE","date",NIL,"Property dINITIALDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cMINIMUMQUANTITY   :=  WSAdvValue( oResponse,"_MINIMUMQUANTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nQUANTITYINTERESTED :=  WSAdvValue( oResponse,"_QUANTITYINTERESTED","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cREQUESTED         :=  WSAdvValue( oResponse,"_REQUESTED","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nRESERVEDPLACES    :=  WSAdvValue( oResponse,"_RESERVEDPLACES","integer",NIL,"Property nRESERVEDPLACES as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cRESERVETYPE       :=  WSAdvValue( oResponse,"_RESERVETYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIME              :=  WSAdvValue( oResponse,"_TIME","string",NIL,"Property cTIME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nTOTALPLACES       :=  WSAdvValue( oResponse,"_TOTALPLACES","integer",NIL,"Property nTOTALPLACES as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFDATACATEGS

WSSTRUCT RHTRAININGS_ARRAYOFDATACATEGS
	WSDATA   oWSDATACATEGS             AS RHTRAININGS_DATACATEGS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_ARRAYOFDATACATEGS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_ARRAYOFDATACATEGS
	::oWSDATACATEGS        := {} // Array Of  RHTRAININGS_DATACATEGS():New()
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_ARRAYOFDATACATEGS
	Local oClone := RHTRAININGS_ARRAYOFDATACATEGS():NEW()
	oClone:oWSDATACATEGS := NIL
	If ::oWSDATACATEGS <> NIL 
		oClone:oWSDATACATEGS := {}
		aEval( ::oWSDATACATEGS , { |x| aadd( oClone:oWSDATACATEGS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_ARRAYOFDATACATEGS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DATACATEGS","DATACATEGS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDATACATEGS , RHTRAININGS_DATACATEGS():New() )
			::oWSDATACATEGS[len(::oWSDATACATEGS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFDATATRAININGS

WSSTRUCT RHTRAININGS_ARRAYOFDATATRAININGS
	WSDATA   oWSDATATRAININGS          AS RHTRAININGS_DATATRAININGS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_ARRAYOFDATATRAININGS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_ARRAYOFDATATRAININGS
	::oWSDATATRAININGS     := {} // Array Of  RHTRAININGS_DATATRAININGS():New()
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_ARRAYOFDATATRAININGS
	Local oClone := RHTRAININGS_ARRAYOFDATATRAININGS():NEW()
	oClone:oWSDATATRAININGS := NIL
	If ::oWSDATATRAININGS <> NIL 
		oClone:oWSDATATRAININGS := {}
		aEval( ::oWSDATATRAININGS , { |x| aadd( oClone:oWSDATATRAININGS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_ARRAYOFDATATRAININGS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DATATRAININGS","DATATRAININGS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDATATRAININGS , RHTRAININGS_DATATRAININGS():New() )
			::oWSDATATRAININGS[len(::oWSDATATRAININGS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure DATAPOSITION

WSSTRUCT RHTRAININGS_DATAPOSITION
	WSDATA   cDESCRPOSITION            AS string
	WSDATA   oWSLISTOFCOURSES          AS RHTRAININGS_ARRAYOFDATACOURSES OPTIONAL
	WSDATA   cPOSITIONID               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_DATAPOSITION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_DATAPOSITION
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_DATAPOSITION
	Local oClone := RHTRAININGS_DATAPOSITION():NEW()
	oClone:cDESCRPOSITION       := ::cDESCRPOSITION
	oClone:oWSLISTOFCOURSES     := IIF(::oWSLISTOFCOURSES = NIL , NIL , ::oWSLISTOFCOURSES:Clone() )
	oClone:cPOSITIONID          := ::cPOSITIONID
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_DATAPOSITION
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRPOSITION     :=  WSAdvValue( oResponse,"_DESCRPOSITION","string",NIL,"Property cDESCRPOSITION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode2 :=  WSAdvValue( oResponse,"_LISTOFCOURSES","ARRAYOFDATACOURSES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSLISTOFCOURSES := RHTRAININGS_ARRAYOFDATACOURSES():New()
		::oWSLISTOFCOURSES:SoapRecv(oNode2)
	EndIf
	::cPOSITIONID        :=  WSAdvValue( oResponse,"_POSITIONID","string",NIL,"Property cPOSITIONID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFDATADISCIPLINES

WSSTRUCT RHTRAININGS_ARRAYOFDATADISCIPLINES
	WSDATA   oWSDATADISCIPLINES        AS RHTRAININGS_DATADISCIPLINES OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_ARRAYOFDATADISCIPLINES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_ARRAYOFDATADISCIPLINES
	::oWSDATADISCIPLINES   := {} // Array Of  RHTRAININGS_DATADISCIPLINES():New()
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_ARRAYOFDATADISCIPLINES
	Local oClone := RHTRAININGS_ARRAYOFDATADISCIPLINES():NEW()
	oClone:oWSDATADISCIPLINES := NIL
	If ::oWSDATADISCIPLINES <> NIL 
		oClone:oWSDATADISCIPLINES := {}
		aEval( ::oWSDATADISCIPLINES , { |x| aadd( oClone:oWSDATADISCIPLINES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_ARRAYOFDATADISCIPLINES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DATADISCIPLINES","DATADISCIPLINES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDATADISCIPLINES , RHTRAININGS_DATADISCIPLINES():New() )
			::oWSDATADISCIPLINES[len(::oWSDATADISCIPLINES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFDATACOURSES

WSSTRUCT RHTRAININGS_ARRAYOFDATACOURSES
	WSDATA   oWSDATACOURSES            AS RHTRAININGS_DATACOURSES OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_ARRAYOFDATACOURSES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_ARRAYOFDATACOURSES
	::oWSDATACOURSES       := {} // Array Of  RHTRAININGS_DATACOURSES():New()
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_ARRAYOFDATACOURSES
	Local oClone := RHTRAININGS_ARRAYOFDATACOURSES():NEW()
	oClone:oWSDATACOURSES := NIL
	If ::oWSDATACOURSES <> NIL 
		oClone:oWSDATACOURSES := {}
		aEval( ::oWSDATACOURSES , { |x| aadd( oClone:oWSDATACOURSES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_ARRAYOFDATACOURSES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DATACOURSES","DATACOURSES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDATACOURSES , RHTRAININGS_DATACOURSES():New() )
			::oWSDATACOURSES[len(::oWSDATACOURSES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure DATACATEGS

WSSTRUCT RHTRAININGS_DATACATEGS
	WSDATA   cCATEGCODE                AS string
	WSDATA   cCATEGDESC                AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_DATACATEGS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_DATACATEGS
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_DATACATEGS
	Local oClone := RHTRAININGS_DATACATEGS():NEW()
	oClone:cCATEGCODE           := ::cCATEGCODE
	oClone:cCATEGDESC           := ::cCATEGDESC
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_DATACATEGS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCATEGCODE         :=  WSAdvValue( oResponse,"_CATEGCODE","string",NIL,"Property cCATEGCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCATEGDESC         :=  WSAdvValue( oResponse,"_CATEGDESC","string",NIL,"Property cCATEGDESC as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure DATADISCIPLINES

WSSTRUCT RHTRAININGS_DATADISCIPLINES
	WSDATA   cDISCODE                  AS string
	WSDATA   cDISDESCRIP               AS string OPTIONAL
	WSDATA   cDISSUMMARY               AS string OPTIONAL
	WSDATA   nDISWORKLOAD              AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_DATADISCIPLINES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_DATADISCIPLINES
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_DATADISCIPLINES
	Local oClone := RHTRAININGS_DATADISCIPLINES():NEW()
	oClone:cDISCODE             := ::cDISCODE
	oClone:cDISDESCRIP          := ::cDISDESCRIP
	oClone:cDISSUMMARY          := ::cDISSUMMARY
	oClone:nDISWORKLOAD         := ::nDISWORKLOAD
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_DATADISCIPLINES
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDISCODE           :=  WSAdvValue( oResponse,"_DISCODE","string",NIL,"Property cDISCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDISDESCRIP        :=  WSAdvValue( oResponse,"_DISDESCRIP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISSUMMARY        :=  WSAdvValue( oResponse,"_DISSUMMARY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nDISWORKLOAD       :=  WSAdvValue( oResponse,"_DISWORKLOAD","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure DATACOURSES

WSSTRUCT RHTRAININGS_DATACOURSES
	WSDATA   cCOURSECODE               AS string OPTIONAL
	WSDATA   cCOURSEDESCRIPTION        AS string OPTIONAL
	WSDATA   lCOURSEHELD               AS boolean OPTIONAL
	WSDATA   lCOURSEREQUIRED           AS boolean OPTIONAL
	WSDATA   oWSLISTOFEMPLOYEE         AS RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_DATACOURSES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_DATACOURSES
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_DATACOURSES
	Local oClone := RHTRAININGS_DATACOURSES():NEW()
	oClone:cCOURSECODE          := ::cCOURSECODE
	oClone:cCOURSEDESCRIPTION   := ::cCOURSEDESCRIPTION
	oClone:lCOURSEHELD          := ::lCOURSEHELD
	oClone:lCOURSEREQUIRED      := ::lCOURSEREQUIRED
	oClone:oWSLISTOFEMPLOYEE    := IIF(::oWSLISTOFEMPLOYEE = NIL , NIL , ::oWSLISTOFEMPLOYEE:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_DATACOURSES
	Local oNode5
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOURSECODE        :=  WSAdvValue( oResponse,"_COURSECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEDESCRIPTION :=  WSAdvValue( oResponse,"_COURSEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::lCOURSEHELD        :=  WSAdvValue( oResponse,"_COURSEHELD","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::lCOURSEREQUIRED    :=  WSAdvValue( oResponse,"_COURSEREQUIRED","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_LISTOFEMPLOYEE","ARRAYOFDATACOURSESEMPLOYEE",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSLISTOFEMPLOYEE := RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE():New()
		::oWSLISTOFEMPLOYEE:SoapRecv(oNode5)
	EndIf
Return

// WSDL Data Structure ARRAYOFDATACOURSESEMPLOYEE

WSSTRUCT RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE
	WSDATA   oWSDATACOURSESEMPLOYEE    AS RHTRAININGS_DATACOURSESEMPLOYEE OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE
	::oWSDATACOURSESEMPLOYEE := {} // Array Of  RHTRAININGS_DATACOURSESEMPLOYEE():New()
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE
	Local oClone := RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE():NEW()
	oClone:oWSDATACOURSESEMPLOYEE := NIL
	If ::oWSDATACOURSESEMPLOYEE <> NIL 
		oClone:oWSDATACOURSESEMPLOYEE := {}
		aEval( ::oWSDATACOURSESEMPLOYEE , { |x| aadd( oClone:oWSDATACOURSESEMPLOYEE , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE
	Local cSoap := ""
	aEval( ::oWSDATACOURSESEMPLOYEE , {|x| cSoap := cSoap  +  WSSoapValue("DATACOURSESEMPLOYEE", x , x , "DATACOURSESEMPLOYEE", .F. , .F., 0 , NIL, .F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_ARRAYOFDATACOURSESEMPLOYEE
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DATACOURSESEMPLOYEE","DATACOURSESEMPLOYEE",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDATACOURSESEMPLOYEE , RHTRAININGS_DATACOURSESEMPLOYEE():New() )
			::oWSDATACOURSESEMPLOYEE[len(::oWSDATACOURSESEMPLOYEE)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure DATACOURSESEMPLOYEE

WSSTRUCT RHTRAININGS_DATACOURSESEMPLOYEE
	WSDATA   cADMISSIONDATE            AS string OPTIONAL
	WSDATA   cBRANCH                   AS string OPTIONAL
	WSDATA   lCOURSEHELD               AS boolean OPTIONAL
	WSDATA   cDESCRDEPARTMENT          AS string OPTIONAL
	WSDATA   cDESCSITUACAO             AS string OPTIONAL
	WSDATA   cINDICE                   AS string OPTIONAL
	WSDATA   cNAME                     AS string OPTIONAL
	WSDATA   cPOSITIONID               AS string OPTIONAL
	WSDATA   cREGISTRATION             AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHTRAININGS_DATACOURSESEMPLOYEE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHTRAININGS_DATACOURSESEMPLOYEE
Return

WSMETHOD CLONE WSCLIENT RHTRAININGS_DATACOURSESEMPLOYEE
	Local oClone := RHTRAININGS_DATACOURSESEMPLOYEE():NEW()
	oClone:cADMISSIONDATE       := ::cADMISSIONDATE
	oClone:cBRANCH              := ::cBRANCH
	oClone:lCOURSEHELD          := ::lCOURSEHELD
	oClone:cDESCRDEPARTMENT     := ::cDESCRDEPARTMENT
	oClone:cDESCSITUACAO        := ::cDESCSITUACAO
	oClone:cINDICE              := ::cINDICE
	oClone:cNAME                := ::cNAME
	oClone:cPOSITIONID          := ::cPOSITIONID
	oClone:cREGISTRATION        := ::cREGISTRATION
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHTRAININGS_DATACOURSESEMPLOYEE
	Local cSoap := ""
	cSoap += WSSoapValue("ADMISSIONDATE", ::cADMISSIONDATE, ::cADMISSIONDATE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("BRANCH", ::cBRANCH, ::cBRANCH , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEHELD", ::lCOURSEHELD, ::lCOURSEHELD , "boolean", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DESCRDEPARTMENT", ::cDESCRDEPARTMENT, ::cDESCRDEPARTMENT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DESCSITUACAO", ::cDESCSITUACAO, ::cDESCSITUACAO , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("INDICE", ::cINDICE, ::cINDICE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("NAME", ::cNAME, ::cNAME , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("POSITIONID", ::cPOSITIONID, ::cPOSITIONID , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, ::cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHTRAININGS_DATACOURSESEMPLOYEE
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cADMISSIONDATE     :=  WSAdvValue( oResponse,"_ADMISSIONDATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::lCOURSEHELD        :=  WSAdvValue( oResponse,"_COURSEHELD","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cDESCRDEPARTMENT   :=  WSAdvValue( oResponse,"_DESCRDEPARTMENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCSITUACAO      :=  WSAdvValue( oResponse,"_DESCSITUACAO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINDICE            :=  WSAdvValue( oResponse,"_INDICE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPOSITIONID        :=  WSAdvValue( oResponse,"_POSITIONID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return


